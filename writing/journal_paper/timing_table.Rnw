%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Do not edit the TeX file your work
% will be overwritten.  Edit the RnW
% file instead.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<setup, include=FALSE>>=
# load data for the table

load("R_scripts/data_processed/iris_timing.RData")
load("R_scripts/data_processed/mice_timing.RData")
load("R_scripts/data_processed/structure_timing.RData")

print_sigfigs <- function(x){
    if(x < 10){
        sprintf('%1.1g', x)
    }else{
        # not sure how to not default to
        # scientific notation
        return(round(x, -1))
    }
}

@

The data sets we considered in our experiments had varying degrees
of complexity,
and the computational of cost of fitting the variational approximation
thus also varies accordingly.
Consistent across each experiment, the cost of forming the linear approximation---the step that requires computing and inverting the Hessian matrix---is roughly an order of magnitude faster than refitting (\tabref{timing_table}). 

Importantly, the Hessian inversion only needs to be done once for a given perturbation.
In all the examples, after the linear approximation is formed, 
extrapolating to {\em any} new prior parameter 
$\alpha\not=\alpha_0$ or $\t\not=0$ takes $\approx\sfrac{1}{1000}$th of a 
second. 

For example, in the thrush data and fastSTRUCTURE model,
the initial fit took seven seconds, with subsequent refits
(which recall were warm-started with the initial fit) taking
between five and ten seconds.
Inverting the Hessian to form the linear approximation takes less than a second.

In our experiments, we used conjugate gradient to solve the linear system, 
and thus had to re-solve for each proposed perturbation $\phi$. 
There are two ways to avoid re-solving the linear system for each $\phi$.
First, we could have computed the Hessian directly and factorized it, 
with a Cholesky decomposition, for example. 
After this one-time cost of factorizing the Hessian, 
the saved Cholesky decomposition could 
be re-used to cheaply solve the requisite linear system for any $\phi$. 
This is only possible if the size of the Hessian matrix is not too large, 
otherwise saving the Hessian (or its factorization) in memory 
may be impossible. 
Secondly, we could have used the influence function in conjunction with 
\corref{etafun_deriv_form} to form the fully linearized approximation $\glin$.
This requires pre-specifying a posterior quantity of interest $\g$. 
However, once $\g$ is defined, we can compute its influence function, which involves solving the linear system; then, given any perturbation $\phi$, 
we can approximate the integral in \corref{etafun_deriv_form} numerically, 
by evaluating the influence function and $\phi$ at a finite number of grid points, for example. The Hessian inversion is done only once in the
computation of the influence function, 
and the influence function can be applied
to any $\phi$. 

In each data set and model we consider, the the speed of the linear
approximation allows us to quickly explore a wide range of possible prior perturbations.
While refitting for all possible prior perturbations is impossible,
the influence function, which is cheap to compute relative to refitting, 
is able to provide a guide to uncover influential perturbations, 
at which we can then refit the model. 



% For example, in the mice data and regression model,
% the initial fit took 30 seconds, with subsequent refits
% (which recall were warm-started with the initial fit) taking
% between 20 and 30 seconds.
% Inverting the Hessian to form the linear approximation three seconds.
% Computing the influence function also takes less than a second.





\begin{table}[tb]
\centering
\caption{Compute time in seconds of various quantities on each data set.
Reported times for $\etaopt(\alpha)$ and $\etalin(\alpha)$ are
median times over the set of considered $\alpha$'s.
The reported influence function time is the time required to
evaluate the influence function on a grid of 1000 points. }
\tablabel{timing_table}
\begin{tabular}{|r|r|r|r|}
    \hline
    & iris & mice  & thrush \\
    \hline
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % initial fit
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Initial fit &
    \Sexpr{print_sigfigs(iris_timing_dict$init_fit_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$init_fit_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$init_fit_time)} \\
    \hline
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % hessian solve for alpha
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Hessian solve for $\alpha$ sensitivity &
    \Sexpr{print_sigfigs(iris_timing_dict$alpha_hess_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$alpha_hess_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$alpha_hess_time)} \\
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % linear approx time for alpha
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Linear approx. $\etalin(\alpha)$ &
    \Sexpr{print_sigfigs(iris_timing_dict$alpha_lr_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$alpha_lr_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$alpha_lr_time)} \\
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % refit time for alpha
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Refits $\etaopt(\alpha)$ &
    \Sexpr{print_sigfigs(iris_timing_dict$alpha_refit_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$alpha_refit_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$alpha_refit_time)} \\
    \hline
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % influence function
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \shortstack{ \\ The influence function \\ (at 1000 grid points)}  &
    \Sexpr{print_sigfigs(iris_timing_dict$infl_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$infl_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$infl_time)} \\
    \hline
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % hessian solve for functional perturbation
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Hessian solve for $\phi$ &
    \Sexpr{print_sigfigs(iris_timing_dict$phi_hessian_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$phi_hessian_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$phi_hessian_time)}\\
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % linear approx for functional perturbation
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Linear approx. $\etalin(\phi)$ &
    \Sexpr{print_sigfigs(iris_timing_dict$phi_lr_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$phi_lr_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$phi_lr_time)} \\
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % refit time for functional perturbation
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Refit $\etalin(\phi)$ &
    \Sexpr{print_sigfigs(iris_timing_dict$phi_refit_time)} &
    \Sexpr{print_sigfigs(mice_timing_dict$phi_refit_time)} &
    \Sexpr{print_sigfigs(structure_timing_dict$phi_refit_time)} \\
    \hline
\end{tabular}
\end{table}
